---
import ReplyForm from "./ReplyForm.astro";

interface CommentType {
  id: number;
  postSlug: string;
  name: string;
  message: string;
  createdAt: Date;
  parentId: number;
  email?: string;
  children?: CommentType[];
}

interface Props {
  comment: CommentType;
}

const { comment } = Astro.props as Props;
---

<div class="p-4 rounded" style="background: var(--toggle-bg)">
    <div class="font-bold">{comment.name}</div>
    <div class="text-gray-600 text-sm">
        {comment.createdAt?.toLocaleDateString('en-US', {
                        weekday: 'long',
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                        hour: '2-digit',
                        minute: '2-digit',
                        second: '2-digit',
                        hour12: true,  // Use 12-hour format (AM/PM)
                      })}
    </div>
    <div class="mt-2">{comment.message}</div>

    <details class="text-gray-600 text-xs">
      <summary>Reply</summary>
      <ReplyForm parentId={comment.id} starter={comment.name} />
    </details>

    {comment.children?.length ? (
    <div class="pl-6 border-l-2 border-gray-300 mt-4">
        {comment.children.map((child) => (
        <div>
            <div class="font-bold">{child.name}</div>
            <div class="text-gray-600 text-sm">
            {child.createdAt?.toLocaleDateString('en-US', {
              weekday: 'long',
              year: 'numeric',
              month: 'long',
              day: 'numeric',
              hour: '2-digit',
              minute: '2-digit',
              second: '2-digit',
              hour12: true,  // Use 12-hour format (AM/PM)
            })}
            </div>
            <div class="mt-2">{child.message}</div>

            <details class="text-gray-600 text-xs">
              <summary>Reply</summary>
              <ReplyForm parentId={comment.id} starter={child.name} />
            </details>
        </div>
        ))}
    </div>
    ) : null}
</div>